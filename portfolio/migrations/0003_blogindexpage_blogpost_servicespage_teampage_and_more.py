# Generated by Django 5.2.6 on 2025-09-05 23:51

import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('portfolio', '0002_aboutpage_contactpage_and_more'),
        ('wagtailcore', '0095_groupsitepermission'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero_title', models.CharField(default='Our Blog', max_length=255)),
                ('hero_description', wagtail.fields.RichTextField(default='<p>Stay updated with the latest in technology, development insights, and industry trends.</p>')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('excerpt', models.TextField(help_text='Brief description for listing pages', max_length=500)),
                ('author', models.CharField(default='Fintaa Team', max_length=255)),
                ('publish_date', models.DateField(verbose_name='Post date')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog/')),
                ('content', wagtail.fields.StreamField([('heading', 0), ('paragraph', 1), ('image', 2), ('code', 3), ('quote', 4), ('list', 6)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'form_classname': 'title'}), 1: ('wagtail.blocks.RichTextBlock', (), {}), 2: ('wagtail.images.blocks.ImageChooserBlock', (), {}), 3: ('wagtail.blocks.TextBlock', (), {}), 4: ('wagtail.blocks.BlockQuoteBlock', (), {}), 5: ('wagtail.blocks.CharBlock', (), {'label': 'Item'}), 6: ('wagtail.blocks.ListBlock', (5,), {})})),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ServicesPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero_title', models.CharField(default='Our Services', max_length=255)),
                ('hero_description', wagtail.fields.RichTextField(default='<p>We offer comprehensive software development services to transform your ideas into reality.</p>')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TeamPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero_title', models.CharField(default='Our Team', max_length=255)),
                ('hero_description', wagtail.fields.RichTextField(default='<p>Meet the talented individuals who make our software house exceptional.</p>')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ServicePageItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(max_length=255)),
                ('description', wagtail.fields.RichTextField()),
                ('icon', models.CharField(help_text='Font Awesome icon class', max_length=100)),
                ('features', wagtail.fields.RichTextField(blank=True, help_text='List of features for this service')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_items', to='portfolio.servicespage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeamPageMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
                ('bio', wagtail.fields.RichTextField()),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('linkedin', models.URLField(blank=True)),
                ('github', models.URLField(blank=True)),
                ('twitter', models.URLField(blank=True)),
                ('skills', models.CharField(help_text='Comma-separated skills', max_length=500)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='portfolio.teampage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
