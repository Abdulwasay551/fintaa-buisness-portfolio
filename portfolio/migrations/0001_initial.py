# Generated by Django 5.2.6 on 2025-09-05 23:00

import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0095_groupsitepermission'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('excerpt', models.TextField(help_text='Short description for blog listing', max_length=500)),
                ('featured_image_url', models.URLField(blank=True, help_text='URL for featured blog image')),
                ('author', models.CharField(default='Fintaa Team', max_length=255)),
                ('publish_date', models.DateTimeField(auto_now_add=True)),
                ('read_time', models.CharField(default='5 min read', max_length=20)),
                ('content', wagtail.fields.StreamField([('heading', 0), ('paragraph', 1), ('image', 2), ('quote', 3), ('code', 4)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'form_classname': 'title'}), 1: ('wagtail.blocks.RichTextBlock', (), {}), 2: ('wagtail.images.blocks.ImageChooserBlock', (), {}), 3: ('wagtail.blocks.BlockQuoteBlock', (), {}), 4: ('wagtail.blocks.TextBlock', (), {'label': 'Code'})})),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ContactSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('service', models.CharField(choices=[('web_development', 'Web Development'), ('mobile_app_development', 'Mobile App Development'), ('ai_automation', 'AI & Automation'), ('cybersecurity', 'Cybersecurity'), ('digital_marketing', 'Digital Marketing'), ('call_center_services', 'Call Center Services')], max_length=100)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_responded', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero_title', models.CharField(default='Fintaa', max_length=255)),
                ('hero_subtitle', models.CharField(default='SOFTWARE HOUSE', max_length=255)),
                ('hero_typing_text', models.CharField(default='Transforming Ideas into Digital Reality...', help_text='Text for typing animation', max_length=500)),
                ('hero_description', wagtail.fields.RichTextField(default="Pakistan's Premier Software Development Company - Specializing in cutting-edge technology solutions, from web development to AI agents, we deliver excellence in every project.")),
                ('hero_primary_button_text', models.CharField(default='Get Started', max_length=50)),
                ('hero_secondary_button_text', models.CharField(default='View Portfolio', max_length=50)),
                ('about_title', models.CharField(default='About Fintaa', max_length=255)),
                ('about_description', wagtail.fields.RichTextField(default='Registered in Pakistan as a sole proprietorship, Fintaa Software House is your trusted partner in digital transformation.')),
                ('about_additional_text', wagtail.fields.RichTextField(blank=True)),
                ('technologies_count', models.CharField(default='50+', max_length=10)),
                ('projects_count', models.CharField(default='100+', max_length=10)),
                ('client_satisfaction', models.CharField(default='95%', max_length=10)),
                ('years_experience', models.CharField(default='5+', max_length=10)),
                ('contact_email', models.EmailField(default='info@Fintaa.pk', max_length=254)),
                ('contact_location', models.CharField(default='Pakistan', max_length=255)),
                ('business_hours', models.CharField(default='24/7 Available', max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PricingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=255)),
                ('price', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_popular', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('project_title', models.CharField(max_length=255)),
                ('project_subtitle', models.CharField(blank=True, max_length=255)),
                ('client_name', models.CharField(max_length=255)),
                ('project_url', models.URLField(blank=True, help_text='Live project URL')),
                ('github_url', models.URLField(blank=True, help_text='GitHub repository URL')),
                ('project_overview', wagtail.fields.RichTextField()),
                ('project_challenge', wagtail.fields.RichTextField(blank=True)),
                ('project_solution', wagtail.fields.RichTextField(blank=True)),
                ('project_results', wagtail.fields.RichTextField(blank=True)),
                ('project_duration', models.CharField(blank=True, max_length=100)),
                ('project_team_size', models.CharField(blank=True, max_length=100)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('featured_image_url', models.URLField(blank=True, help_text='URL for featured project image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ServicePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero_title', models.CharField(max_length=255)),
                ('hero_description', wagtail.fields.RichTextField()),
                ('hero_image_url', models.URLField(blank=True, help_text='URL for hero image')),
                ('service_overview', wagtail.fields.RichTextField()),
                ('process_title', models.CharField(default='Our Process', max_length=255)),
                ('technologies_title', models.CharField(default='Technologies We Use', max_length=255)),
                ('pricing_title', models.CharField(default='Pricing', max_length=255)),
                ('pricing_description', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('tag_name', models.CharField(max_length=100)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_tags', to='portfolio.blogpage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AboutFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('feature_text', models.CharField(max_length=255)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='about_features', to='portfolio.homepage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PricingFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('feature_text', models.CharField(max_length=255)),
                ('is_included', models.BooleanField(default=True)),
                ('plan', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='portfolio.pricingplan')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('image_url', models.URLField(help_text='URL for project image')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('is_featured', models.BooleanField(default=False)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_images', to='portfolio.projectpage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTechnology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('frontend', 'Frontend'), ('backend', 'Backend'), ('database', 'Database'), ('deployment', 'Deployment'), ('other', 'Other')], default='other', max_length=100)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_technologies', to='portfolio.projectpage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('icon_svg', models.TextField(blank=True, help_text='SVG icon code for the service')),
                ('feature_1', models.CharField(blank=True, max_length=255)),
                ('feature_2', models.CharField(blank=True, max_length=255)),
                ('feature_3', models.CharField(blank=True, max_length=255)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='portfolio.homepage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProcessStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('step_number', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_steps', to='portfolio.servicepage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='pricingplan',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_plans', to='portfolio.servicepage'),
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=255)),
                ('logo_url', models.URLField(blank=True, help_text='URL for technology logo')),
                ('description', models.TextField(blank=True)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='technologies', to='portfolio.servicepage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
